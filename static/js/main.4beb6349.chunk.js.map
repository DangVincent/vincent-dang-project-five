{"version":3,"sources":["components/Header.js","components/Global.js","components/Intraday.js","components/Daily.js","components/Weekly.js","components/Monthly.js","components/Ticker.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Global","state","globalDate","globalHigh","globalLow","globalVolume","globalChange","globalChangePercent","isLoading","axios","get","this","props","stockEquitySymbol","then","result","console","log","data","historical","globalData","dateValue","date","highValue","high","lowValue","low","volumeValue","volume","changeValue","change","changePercentValue","changePercent","setState","catch","error","getGlobalEquityData","Intraday","intradayHigh","intradayLow","intradayClose","intradayVolume","method","url","dataResponse","params","apikey","apiKey","function","interval","symbol","values","Object","closeValue","Number","toFixed","getIntradayEquityData","Daily","dailyHigh","dailyLow","dailyClose","dailyVolume","getDailyEquityData","Weekly","weeklyHigh","weeklyLow","weeklyClose","weeklyVolume","getWeeklyEquityData","Monthly","monthlyHigh","monthlyLow","monthlyClose","monthlyVolume","getMonthlyEquityData","Ticker","tickerList","symbolsList","newSymbolsList","i","push","elementType","options","wrapAround","autoPlay","groupCells","static","map","ticker","index","key","price","App","handleSwitchGlobal","timeSeriesGlobal","timeSeriesIntraday","timeSeriesDaily","timeSeriesWeekly","timeSeriesMonthly","handleSwitchIntraday","handleSwitchDaily","handleSwitchWeekly","handleSwitchMonthly","stockName","stockSymbol","stockPrice","reactApiKey","process","stock","filter","item","name","getStockInfo","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4beb6349.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h1><span>h-l</span> index</h1>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Global extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            globalDate: '',\r\n            globalHigh: '',\r\n            globalLow: '',\r\n            globalVolume: '',\r\n            globalChange: '',\r\n            globalChangePercent: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getGlobalEquityData() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.props.stockEquitySymbol}?timeseries=5`)\r\n        .then((result) => {\r\n            console.log(result.data.historical[0]);\r\n            const globalData = result.data.historical[0];\r\n            const dateValue = globalData.date;\r\n            const highValue = globalData.high;\r\n            const lowValue = globalData.low;\r\n            const volumeValue = globalData.volume;\r\n            const changeValue = globalData.change;\r\n            const changePercentValue = globalData.changePercent;\r\n            \r\n            this.setState({\r\n                globalDate: dateValue,\r\n                globalHigh: highValue,\r\n                globalLow: lowValue,\r\n                globalVolume: volumeValue,\r\n                globalChange: changeValue,\r\n                globalChangePercent: changePercentValue,\r\n                isLoading: false\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGlobalEquityData();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            globalHigh,\r\n            globalLow,\r\n            globalDate,\r\n            globalVolume,\r\n            globalChange,\r\n            globalChangePercent,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <div className=\"preloader\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <h3>global data</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>last updated</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>high</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>change</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>change (%)</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>global data</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>last updated</p>\r\n                        <p>{globalDate}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p>{globalHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p>{globalLow}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p>{globalVolume}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change</p>\r\n                        <p>{globalChange}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change (%)</p>\r\n                        <p>{globalChangePercent}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Intraday extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intradayHigh: '',\r\n            intradayLow: '',\r\n            intradayClose: '',\r\n            intradayVolume: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n    \r\n    getIntradayEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_INTRADAY',\r\n                    interval: '1min',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            console.log(result);\r\n            const values = Object.values(result.data['Time Series (1min)']);\r\n            const highValue = values[0]['2. high'];\r\n            const lowValue = values[0]['3. low'];\r\n            const closeValue = values[0]['4. close'];\r\n            const volumeValue = values[0]['5. volume'];\r\n\r\n            this.setState({\r\n                intradayHigh: Number(highValue).toFixed(2),\r\n                intradayLow: Number(lowValue).toFixed(2),\r\n                intradayClose: Number(closeValue).toFixed(2),\r\n                intradayVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getIntradayEquityData();        \r\n    }\r\n\r\n    render() {\r\n        \r\n        const {\r\n            intradayHigh,\r\n            intradayLow,\r\n            intradayClose,\r\n            intradayVolume,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>intraday data</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>intraday data</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p>{intradayHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p>{intradayLow}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p>{intradayClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p>{intradayVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Daily extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dailyHigh: '',\r\n            dailyLow: '',\r\n            dailyClose: '',\r\n            dailyVolume: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getDailyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_DAILY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            console.log(result);\r\n            // console.log(result.data['Time Series (Daily)']);\r\n            const values = Object.values(result.data['Time Series (Daily)']);\r\n            // console.log(values[0]);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n\r\n            this.setState({\r\n                dailyHigh: Number(highValue).toFixed(2),\r\n                dailyLow: Number(lowValue).toFixed(2),\r\n                dailyClose: Number(closeValue).toFixed(2),\r\n                dailyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDailyEquityData();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            dailyHigh,\r\n            dailyLow,\r\n            dailyClose,\r\n            dailyVolume,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <div className=\"preloader\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <h3>daily data</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>daily data</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p>{dailyHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p>{dailyLow}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p>{dailyClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p>{dailyVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Weekly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            weeklyHigh: '',\r\n            weeklyLow: '',\r\n            weeklyClose: '',\r\n            weeklyVolume: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getWeeklyEquityData() {\r\n\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_WEEKLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            // console.log(result.data['Weekly Time Series']);\r\n            const values = Object.values(result.data['Weekly Time Series']);\r\n            // console.log(values[0]);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n    \r\n            this.setState({\r\n                weeklyHigh: Number(highValue).toFixed(2),\r\n                weeklyLow: Number(lowValue).toFixed(2),\r\n                weeklyClose: Number(closeValue).toFixed(2),\r\n                weeklyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWeeklyEquityData();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weeklyHigh,\r\n            weeklyLow,\r\n            weeklyClose,\r\n            weeklyVolume,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <div className=\"preloader\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <h3>weekly data</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>weekly data</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p>{weeklyHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p>{weeklyLow}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p>{weeklyClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p>{weeklyVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Monthly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monthlyHigh: '',\r\n            monthlyLow: '',\r\n            monthlyClose: '',\r\n            monthlyVolume: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getMonthlyEquityData() {\r\n\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_MONTHLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Monthly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n\r\n            this.setState({\r\n                monthlyHigh: Number(highValue).toFixed(2),\r\n                monthlyLow: Number(lowValue).toFixed(2),\r\n                monthlyClose: Number(closeValue).toFixed(2),\r\n                monthlyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMonthlyEquityData();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            monthlyHigh,\r\n            monthlyLow,\r\n            monthlyClose,\r\n            monthlyVolume,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <div className=\"preloader\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                    <h3>monthly data</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>monthly data</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p>{monthlyHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p>{monthlyLow}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p>{monthlyClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p>{monthlyVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Flickity from 'react-flickity-component';\r\n\r\nexport default class Ticker extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tickerList: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\r\n        .then((result) => {\r\n            const symbolsList = result.data.symbolsList;\r\n            const newSymbolsList = [];\r\n            for (let i = 0; i < 20; i++) {\r\n                newSymbolsList.push(symbolsList[i]);\r\n            };\r\n            this.setState({\r\n                tickerList: newSymbolsList,\r\n                isLoading: false\r\n            })\r\n        }).catch ((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tickerList,\r\n            isLoading\r\n        } = this.state\r\n\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"preloader\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const flickityOptions = {\r\n            wrapAround: true,\r\n            autoPlay: 3000,\r\n            groupCells: true\r\n        }\r\n\r\n        return (\r\n            <Flickity \r\n                className={'tickerCarousel'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static\r\n            >\r\n            {tickerList.map((ticker, index) => {\r\n                return (\r\n                    <div className={'tickerCell'} key={index}><p>{ticker.symbol} {ticker.price}</p></div>\r\n                )\r\n            })}\r\n            </Flickity>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport Global from './components/Global';\nimport Intraday from './components/Intraday';\nimport Daily from './components/Daily';\nimport Weekly from './components/Weekly';\nimport Monthly from './components/Monthly';\nimport Ticker from './components/Ticker';\nimport axios from 'axios';\n\nexport default class App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        stockName: '',\n        stockSymbol: 'MSFT',\n        stockPrice: '',\n        reactApiKey: process.env.REACT_APP_ALPHAVANTAGE_API_KEY,\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false,\n        isLoading: true\n      }\n    }\n    \n    getStockInfo() {\n  \n      axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\n      .then((result) => {\n        const symbolsList = result.data.symbolsList;\n        const originalSymbolsList = [...symbolsList];\n        const stock = originalSymbolsList.filter((item) => {\n          return item.symbol === this.state.stockSymbol;\n        });\n        console.log(stock);\n        const symbol = stock[0].symbol; \n        const name = stock[0].name;\n        const price = stock[0].price;\n        this.setState({\n          stockName: name,\n          stockSymbol: symbol,\n          stockPrice: price,\n          isLoading: false\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      }); \n    }\n\n    componentDidMount() {\n        this.getStockInfo();\n    }\n    handleSwitchGlobal = () => {\n      this.setState({\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    handleSwitchIntraday = () => {\n      this.setState({\n        timeSeriesIntraday: true,\n        timeSeriesGlobal: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    handleSwitchDaily = () => {\n      this.setState({\n        timeSeriesDaily: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    handleSwitchWeekly = () => {\n      this.setState({\n        timeSeriesWeekly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    handleSwitchMonthly = () => {\n      this.setState({\n        timeSeriesMonthly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false\n      });\n    };\n\n    render() {\n      \n      const {\n        stockName, \n        stockSymbol,\n        stockPrice,\n        reactApiKey,\n        isLoading,\n        timeSeriesGlobal,\n        timeSeriesIntraday,\n        timeSeriesDaily,\n        timeSeriesWeekly,\n        timeSeriesMonthly,\n      } = this.state;\n\n      if (isLoading) {\n        return(\n          <div className=\"preloader\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n          </div>\n        )\n      } \n\n        return (\n            <div className=\"App\">\n              <header>\n                <Header />\n              </header>\n              <main>\n                <div className=\"wrapper\">\n                <h2>{stockName} ({stockSymbol}) {stockPrice}</h2>\n\n                {timeSeriesGlobal && <Global apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                {timeSeriesIntraday && (!timeSeriesDaily) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Intraday apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                {timeSeriesDaily && (!timeSeriesIntraday) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Daily apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                {timeSeriesWeekly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesMonthly) && <Weekly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n                {timeSeriesMonthly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesWeekly) && <Monthly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n\n                {(!timeSeriesGlobal) ? <button onClick={this.handleSwitchGlobal}>global</button> : null}  \n                {(!timeSeriesIntraday) ? <button onClick={this.handleSwitchIntraday}>intraday</button> : null}\n                {(!timeSeriesDaily) ? <button onClick={this.handleSwitchDaily}>daily</button> : null}\n                {(!timeSeriesWeekly) ? <button onClick={this.handleSwitchWeekly}>weekly</button> : null}\n                {(!timeSeriesMonthly) ? <button onClick={this.handleSwitchMonthly}>monthly</button> : null}\n                \n                </div> \n              </main>\n              <footer>\n                <Ticker />\n                <div className=\"wrapper\">\n                  <p>copyright vincent 2019</p>\n                </div>\n              </footer>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}