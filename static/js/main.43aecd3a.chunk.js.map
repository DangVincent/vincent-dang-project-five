{"version":3,"sources":["components/Header.js","components/Global.js","components/Intraday.js","components/Daily.js","components/Weekly.js","components/Monthly.js","components/Ticker.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleChange","event","stockList","props","userInput","target","value","filterSuggestions","filter","stocks","symbol","toUpperCase","indexOf","setState","activeSuggestion","filteredSuggestions","showSuggestions","handleSubmit","preventDefault","searchInput","state","searchStockEquity","onClick","currentTarget","id","suggestionsListComponent","this","length","className","map","suggestion","index","key","name","onSubmit","htmlFor","type","placeholder","autoComplete","onChange","Component","Global","globalPrice","globalDate","globalHigh","globalLow","globalVolume","globalChange","globalChangePercent","isLoading","axios","get","stockEquitySymbol","apiKey","then","result","stockPrice","data","price","Number","toFixed","globalData","historical","dateValue","date","highValue","high","lowValue","low","volumeValue","volume","changeValue","change","changePercentValue","changePercent","handleStockChange","catch","handleErrors","getCurrentPrice","getGlobalEquityData","prevProps","setTimeout","increaseOrDecrease","aria-hidden","icon","faCaretUp","faCaretDown","Intraday","intradayHigh","intradayLow","intradayClose","intradayVolume","changeIncrease","changeDecrease","method","url","dataResponse","params","apikey","function","interval","console","log","values","Object","closeValue","closeValue2","Swal","fire","getIntradayEquityData","Daily","dailyHigh","dailyLow","dailyClose","dailyVolume","getDailyEquityData","Weekly","weeklyHigh","weeklyLow","weeklyClose","weeklyVolume","getWeeklyEquityData","Monthly","monthlyHigh","monthlyLow","monthlyClose","monthlyVolume","getMonthlyEquityData","Ticker","tickerList","symbolsList","newSymbolsList","i","push","error","message","elementType","options","wrapAround","autoPlay","static","ticker","App","handleSwitchGlobal","timeSeriesGlobal","timeSeriesIntraday","timeSeriesDaily","timeSeriesWeekly","timeSeriesMonthly","handleSwitchIntraday","handleSwitchDaily","handleSwitchWeekly","handleSwitchMonthly","position","title","showConfirmButton","timer","stockSymbol","getStockInfo","upOrDown","stockName","stockLetters","reactApiKey","process","reactApiKey2","originalSymbolsList","stock","item","faCopyright","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43aecd3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInput: '',\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n        };\r\n    };\r\n\r\n    // Handle any change to the search input and set state\r\n    handleChange = (event) => {\r\n        const {stockList} = this.props;\r\n        const userInput = event.target.value;\r\n        const filterSuggestions = stockList.filter(\r\n            (stocks) => {\r\n                return !stocks.symbol.toUpperCase().indexOf(userInput.toUpperCase())\r\n            });\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: filterSuggestions,\r\n            showSuggestions: true,\r\n            userInput: event.target.value\r\n        });\r\n    };\r\n    // Handle submit function when the user submits an input\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const searchInput = this.state.userInput.toUpperCase();\r\n        if (searchInput !== '') {\r\n            this.props.searchStockEquity(event, searchInput);\r\n            this.setState({\r\n                userInput: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    // Event fired when the user clicks on a suggestion\r\n    onClick = (event) => {\r\n      // Update the user input and reset the rest of the state\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: event.currentTarget.id\r\n      });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            userInput,\r\n            showSuggestions,\r\n            filteredSuggestions,\r\n            activeSuggestion\r\n        } = this.state;\r\n\r\n        // sugegstion results obtained from https://alligator.io/react/react-autocomplete/\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestionActive\";\r\n                            }\r\n                            return (\r\n                                <li \r\n                                    className={className}\r\n                                    key={index}\r\n                                    id={suggestion.symbol}\r\n                                    onClick={this.onClick}\r\n                                ><span>\r\n                                    {suggestion.symbol}\r\n                                </span>\r\n                                <span>\r\n                                    {suggestion.name}\r\n                                </span>  \r\n                                </li>    \r\n                            );   \r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div className=\"noSuggestions\">\r\n                        <p>No suggested results are available.</p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h1><span>h-l</span> index</h1>\r\n                <form className=\"searchForm\" onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"userInput\" className=\"visuallyHidden\">Enter a stock name</label>\r\n                    <input type=\"text\" id=\"userInput\" className=\"searchInput\" placeholder=\"Search for a stock\" autoComplete=\"off\" value={userInput}  \r\n                    onChange={this.handleChange}/>\r\n                    <input className=\"submitButton\" type=\"submit\" value=\"Submit\"/>\r\n                    {suggestionsListComponent}\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Global extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            globalPrice: '',\r\n            globalDate: '',\r\n            globalHigh: '',\r\n            globalLow: '',\r\n            globalVolume: '',\r\n            globalChange: '',\r\n            globalChangePercent: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to gather the global/overview data and store it into state\r\n    getCurrentPrice() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${this.props.stockEquitySymbol}?apikey=${this.props.apiKey}`)\r\n            .then((result) => {\r\n                const stockPrice = result.data[0].price;\r\n                this.setState({\r\n                    globalPrice: Number(stockPrice).toFixed(2)\r\n                });\r\n            });\r\n    }\r\n\r\n    getGlobalEquityData() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.props.stockEquitySymbol}?timeseries=5&apikey=${this.props.apiKey}`)\r\n        .then((result) => {\r\n            const globalData = result.data.historical[0];\r\n            const dateValue = globalData.date;\r\n            const highValue = globalData.high;\r\n            const lowValue = globalData.low;\r\n            const volumeValue = globalData.volume;\r\n            const changeValue = globalData.change;\r\n            const changePercentValue = globalData.changePercent;\r\n            \r\n            this.setState({\r\n                globalDate: dateValue,\r\n                globalHigh: Number(highValue).toFixed(2),\r\n                globalLow: Number(lowValue).toFixed(2),\r\n                globalVolume: volumeValue,\r\n                globalChange: Number(changeValue).toFixed(2),\r\n                globalChangePercent: Number(changePercentValue).toFixed(2),\r\n                isLoading: false\r\n            })\r\n\r\n            if (changeValue !== 0) {\r\n                this.props.handleStockChange(changeValue);\r\n            }\r\n        }).catch(() => {\r\n            this.props.handleErrors();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrentPrice();\r\n        this.getGlobalEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            setTimeout(() => {\r\n                this.getCurrentPrice();\r\n                this.getGlobalEquityData();\r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            globalPrice,\r\n            globalHigh,\r\n            globalLow,\r\n            globalDate,\r\n            globalVolume,\r\n            globalChange,\r\n            globalChangePercent,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        const {increaseOrDecrease} = this.props;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>global overview</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>last updated</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>price</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change (%)</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>global overview</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>last updated</p>\r\n                        <p>{globalDate}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>price</p>\r\n                        <p className={increaseOrDecrease}>{globalPrice}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={increaseOrDecrease}>{globalHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={increaseOrDecrease}>{globalLow}</p>\r\n                    </li>    \r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={increaseOrDecrease}>{globalVolume}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChange}\r\n                            {(increaseOrDecrease === 'increase') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (increaseOrDecrease === 'decrease') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span>  : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change (%)</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChangePercent}\r\n                            {(increaseOrDecrease === 'increase') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (increaseOrDecrease === 'decrease') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span>  : null}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Intraday extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intradayHigh: '',\r\n            intradayLow: '',\r\n            intradayClose: '',\r\n            intradayVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n    \r\n    // Make axios call to time series intraday and store results in state\r\n    getIntradayEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_INTRADAY',\r\n                    interval: '1min',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            console.log(result);\r\n            const values = Object.values(result.data['Time Series (1min)']);\r\n            const highValue = values[0]['2. high'];\r\n            const lowValue = values[0]['3. low'];\r\n            const closeValue = values[0]['4. close'];\r\n            const volumeValue = values[0]['5. volume'];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                intradayHigh: Number(highValue).toFixed(2),\r\n                intradayLow: Number(lowValue).toFixed(2),\r\n                intradayClose: Number(closeValue).toFixed(2),\r\n                intradayVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getIntradayEquityData();        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n                this.getIntradayEquityData();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        const {\r\n            intradayHigh,\r\n            intradayLow,\r\n            intradayClose,\r\n            intradayVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>intraday data (1 min)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>intraday data (1 min)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}    \r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayLow}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Daily extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dailyHigh: '',\r\n            dailyLow: '',\r\n            dailyClose: '',\r\n            dailyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to time series daily and store results in state\r\n    getDailyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_DAILY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (Daily)']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                dailyHigh: Number(highValue).toFixed(2),\r\n                dailyLow: Number(lowValue).toFixed(2),\r\n                dailyClose: Number(closeValue).toFixed(2),\r\n                dailyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        })\r\n        this.getDailyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getDailyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            dailyHigh,\r\n            dailyLow,\r\n            dailyClose,\r\n            dailyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>daily data (yesterday)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>daily data (yesterday)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyLow}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Weekly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            weeklyHigh: '',\r\n            weeklyLow: '',\r\n            weeklyClose: '',\r\n            weeklyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to timer series weekly and store results in state\r\n    getWeeklyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_WEEKLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Weekly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                weeklyHigh: Number(highValue).toFixed(2),\r\n                weeklyLow: Number(lowValue).toFixed(2),\r\n                weeklyClose: Number(closeValue).toFixed(2),\r\n                weeklyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getWeeklyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getWeeklyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weeklyHigh,\r\n            weeklyLow,\r\n            weeklyClose,\r\n            weeklyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>weekly data (last week)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>weekly data (last week)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyLow}\r\n                                {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Monthly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monthlyHigh: '',\r\n            monthlyLow: '',\r\n            monthlyClose: '',\r\n            monthlyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios to call to time series monthly and store results in state \r\n    getMonthlyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_MONTHLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Monthly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                monthlyHigh: Number(highValue).toFixed(2),\r\n                monthlyLow: Number(lowValue).toFixed(2),\r\n                monthlyClose: Number(closeValue).toFixed(2),\r\n                monthlyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getMonthlyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getMonthlyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            monthlyHigh,\r\n            monthlyLow,\r\n            monthlyClose,\r\n            monthlyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>monthly data (last month)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>monthly data (last month)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyLow}\r\n                                {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyClose}\r\n                            </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>                  {monthlyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// flickity library obtained from https://www.npmjs.com/package/react-flickity-component\r\nimport Flickity from 'react-flickity-component';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class Ticker extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tickerList: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/company/stock/list?apikey=${this.props.apiKey}`)\r\n        .then((result) => {\r\n            const symbolsList = result.data.symbolsList;\r\n            const newSymbolsList = [];\r\n            for (let i = 0; i < 20; i++) {\r\n                newSymbolsList.push(symbolsList[i]);\r\n            };\r\n            this.setState({\r\n                tickerList: newSymbolsList,\r\n                isLoading: false\r\n            })\r\n        }).catch ((error) => {\r\n            Swal.fire(\r\n                'Error', \r\n                `An error has occurred, ${error.message}`, \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tickerList,\r\n            isLoading\r\n        } = this.state\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"preloader3\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const flickityOptions = {\r\n            wrapAround: true,\r\n            autoPlay: 1800\r\n        }\r\n\r\n        return (\r\n            <Flickity \r\n                className={'tickerCarousel'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static\r\n            >\r\n            {tickerList.map((ticker, index) => {\r\n                return (\r\n                    <div className={'tickerCell'} key={index}>\r\n                        <p>{ticker.symbol}</p>\r\n                        <p>{ticker.price}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            </Flickity>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\r\nimport Header from './components/Header';\r\nimport Global from './components/Global';\r\nimport Intraday from './components/Intraday';\r\nimport Daily from './components/Daily';\r\nimport Weekly from './components/Weekly';\r\nimport Monthly from './components/Monthly';\r\nimport Ticker from './components/Ticker';\r\nimport axios from 'axios';\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        stockName: '',\r\n        stockSymbol: 'MSFT',\r\n        stockLetters: '',\r\n        stockPrice: '',\r\n        stockList: [],\r\n        reactApiKey: process.env.REACT_APP_ALPHAVANTAGE_API_KEY,\r\n        reactApiKey2: process.env.REACT_APP_FINANCIALMODELPREP_API_KEY,\r\n        changeIncrease: false,\r\n        changeDecrease: false,\r\n        timeSeriesGlobal: true,\r\n        timeSeriesIntraday: false,\r\n        timeSeriesDaily: false,\r\n        timeSeriesWeekly: false,\r\n        timeSeriesMonthly: false,\r\n        isLoading: true\r\n      }\r\n    }\r\n    \r\n    // Make axios call when the app component mounts and store the default stock data into state\r\n    getStockInfo() {\r\n      axios.get(`https://financialmodelingprep.com/api/v3/company/stock/list?apikey=${this.state.reactApiKey2}`)\r\n      .then((result) => {\r\n        const symbolsList = result.data.symbolsList;\r\n        const originalSymbolsList = [...symbolsList];\r\n        const stock = originalSymbolsList.filter((item) => {\r\n          return item.symbol === this.state.stockSymbol;\r\n        });\r\n        const symbol = stock[0].symbol; \r\n        const name = stock[0].name;\r\n        const price = stock[0].price;\r\n        this.setState({\r\n          stockName: name,\r\n          stockSymbol: symbol,\r\n          stockLetters: symbol,\r\n          stockPrice: price,\r\n          stockList: originalSymbolsList,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.handleErrors();\r\n      }); \r\n    }\r\n\r\n    componentDidMount() {\r\n      Swal.fire(\r\n          'Welcome to H-L Index', \r\n          'Want to know what the latest value on a particular stock? This application will display real-time data as well as historical data from last month, week, day and even last minute. Search for any stock in the search bar by entering a stock name. (Ex. MSFT, SPY)', \r\n          'info'\r\n      );\r\n      this.getStockInfo();\r\n    }\r\n\r\n    handleErrors = () => {\r\n      Swal.fire(\r\n          'Error', \r\n          'Your have entered an incorrect stock name! Please enter a valid stock name. (Ex. MSFT, SPY)', \r\n          'error'\r\n      );\r\n    }\r\n\r\n    // When user clicks on the global time series button, display the global data\r\n    handleSwitchGlobal = () => {\r\n      this.setState({\r\n        timeSeriesGlobal: true,\r\n        timeSeriesIntraday: false,\r\n        timeSeriesDaily: false,\r\n        timeSeriesWeekly: false,\r\n        timeSeriesMonthly: false\r\n      });\r\n    };\r\n\r\n    // When user clicks on the intraday time series button, display the intraday data\r\n    handleSwitchIntraday = () => {\r\n      this.setState({\r\n        timeSeriesIntraday: true,\r\n        timeSeriesGlobal: false,\r\n        timeSeriesDaily: false,\r\n        timeSeriesWeekly: false,\r\n        timeSeriesMonthly: false\r\n      });\r\n    };\r\n\r\n    // When user clicks on the daily time series button, display the daily data\r\n    handleSwitchDaily = () => {\r\n      this.setState({\r\n        timeSeriesDaily: true,\r\n        timeSeriesGlobal: false,\r\n        timeSeriesIntraday: false,\r\n        timeSeriesWeekly: false,\r\n        timeSeriesMonthly: false\r\n      });\r\n    };\r\n\r\n    // When user clicks on the weekly time series button, display the weekly data\r\n    handleSwitchWeekly = () => {\r\n      this.setState({\r\n        timeSeriesWeekly: true,\r\n        timeSeriesGlobal: false,\r\n        timeSeriesIntraday: false,\r\n        timeSeriesDaily: false,\r\n        timeSeriesMonthly: false\r\n      });\r\n    };\r\n\r\n    // When user clicks on the monthly time series button, display the monthly data\r\n    handleSwitchMonthly = () => {\r\n      this.setState({\r\n        timeSeriesMonthly: true,\r\n        timeSeriesGlobal: false,\r\n        timeSeriesIntraday: false,\r\n        timeSeriesDaily: false,\r\n        timeSeriesWeekly: false\r\n      });\r\n    };\r\n\r\n    // Search for the stock equity based on user input and call the axios function\r\n    searchStockEquity = (event, userInput) => {\r\n      event.preventDefault();\r\n      Swal.fire({\r\n        position: 'center',\r\n        icon: 'success',\r\n        title: 'Loading data',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      });\r\n      this.setState({\r\n        stockSymbol: userInput,\r\n        changeDecrease: false,\r\n        changeIncrease: false\r\n      });\r\n      this.getStockInfo();\r\n    }\r\n\r\n    // Determine if the stock increased or decreased based on the change value\r\n    handleStockChange = (upOrDown) => {\r\n      if (upOrDown > 0) {\r\n        this.setState({\r\n          changeIncrease: true\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          changeDecrease: true\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n      \r\n      const {\r\n        stockName, \r\n        stockSymbol,\r\n        stockLetters,\r\n        stockList,\r\n        reactApiKey,\r\n        reactApiKey2,\r\n        changeIncrease,\r\n        changeDecrease,\r\n        isLoading,\r\n        timeSeriesGlobal,\r\n        timeSeriesIntraday,\r\n        timeSeriesDaily,\r\n        timeSeriesWeekly,\r\n        timeSeriesMonthly,\r\n      } = this.state;\r\n\r\n      if (isLoading) {\r\n        return(\r\n          <div className=\"ldsHourglass\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n          </div>\r\n        )\r\n      } \r\n\r\n        return (\r\n            <div className=\"App\">\r\n              <header>\r\n                <Header stockList={stockList} searchStockEquity={this.searchStockEquity}/>\r\n              </header>\r\n              <main>\r\n                <div className=\"wrapper\">\r\n                  <h2>{stockName} ({stockLetters})</h2>\r\n\r\n                  {timeSeriesGlobal && <Global handleErrors={this.handleErrors} apiKey={reactApiKey2} stockEquitySymbol={stockSymbol} handleStockChange={this.handleStockChange} increaseOrDecrease={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}  />}\r\n                  {timeSeriesIntraday && (!timeSeriesDaily) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Intraday apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\r\n                  {timeSeriesDaily && (!timeSeriesIntraday) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Daily apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\r\n                  {timeSeriesWeekly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesMonthly) && <Weekly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\r\n                  {timeSeriesMonthly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesWeekly) && <Monthly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\r\n\r\n                  <div className=\"timeSeriesButtons\">\r\n                    {(!timeSeriesGlobal) ? <button onClick={this.handleSwitchGlobal}>global</button> : null}  \r\n                    {(!timeSeriesIntraday) ? <button onClick={this.handleSwitchIntraday}>intraday</button> : null}\r\n                    {(!timeSeriesDaily) ? <button onClick={this.handleSwitchDaily}>daily</button> : null}\r\n                    {(!timeSeriesWeekly) ? <button onClick={this.handleSwitchWeekly}>weekly</button> : null}\r\n                    {(!timeSeriesMonthly) ? <button onClick={this.handleSwitchMonthly}>monthly</button> : null}\r\n                  </div>\r\n                </div> \r\n              </main>\r\n              <footer>\r\n                <Ticker apiKey={reactApiKey2}/>\r\n                <div className=\"wrapper\">\r\n                <p>copyright <span aria-hidden=\"true\"><FontAwesomeIcon icon={faCopyright} /></span> vincent <span id=\"year\">{new Date().getFullYear()}</span></p>\r\n                </div>\r\n              </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}