{"version":3,"sources":["components/Header.js","components/Global.js","components/Intraday.js","components/Daily.js","components/Weekly.js","components/Monthly.js","components/Ticker.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleChange","event","stockList","props","userInput","target","value","filterSuggestions","filter","stocks","symbol","toUpperCase","indexOf","setState","activeSuggestion","filteredSuggestions","showSuggestions","handleSubmit","preventDefault","searchInput","state","searchStockEquity","onClick","currentTarget","id","suggestionsListComponent","this","length","className","map","suggestion","index","key","name","onSubmit","htmlFor","type","placeholder","autoComplete","onChange","Component","Global","globalDate","globalHigh","globalLow","globalVolume","globalChange","globalChangePercent","isLoading","axios","get","stockEquitySymbol","then","result","globalData","data","historical","dateValue","date","highValue","high","lowValue","low","volumeValue","volume","changeValue","change","changePercentValue","changePercent","Number","toFixed","handleStockChange","catch","handleErrors","getGlobalEquityData","prevProps","setTimeout","increaseOrDecrease","aria-hidden","icon","faCaretUp","faCaretDown","Intraday","intradayHigh","intradayLow","intradayClose","intradayVolume","changeIncrease","changeDecrease","method","url","dataResponse","params","apikey","apiKey","function","interval","values","Object","closeValue","closeValue2","Swal","fire","getIntradayEquityData","Daily","dailyHigh","dailyLow","dailyClose","dailyVolume","getDailyEquityData","Weekly","weeklyHigh","weeklyLow","weeklyClose","weeklyVolume","getWeeklyEquityData","Monthly","monthlyHigh","monthlyLow","monthlyClose","monthlyVolume","getMonthlyEquityData","Ticker","tickerList","symbolsList","newSymbolsList","i","push","error","message","elementType","options","wrapAround","autoPlay","static","ticker","price","App","handleSwitchGlobal","timeSeriesGlobal","timeSeriesIntraday","timeSeriesDaily","timeSeriesWeekly","timeSeriesMonthly","handleSwitchIntraday","handleSwitchDaily","handleSwitchWeekly","handleSwitchMonthly","position","title","showConfirmButton","timer","stockSymbol","getStockInfo","upOrDown","stockName","stockLetters","stockPrice","reactApiKey","process","originalSymbolsList","stock","item","faCopyright","Date","getFullYear","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1be0c29b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInput: '',\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n        };\r\n    };\r\n\r\n    // Handle any change to the search input and set state\r\n    handleChange = (event) => {\r\n        const {stockList} = this.props;\r\n        const userInput = event.target.value;\r\n        const filterSuggestions = stockList.filter(\r\n            (stocks) => {\r\n                return !stocks.symbol.toUpperCase().indexOf(userInput.toUpperCase())\r\n            });\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: filterSuggestions,\r\n            showSuggestions: true,\r\n            userInput: event.target.value\r\n        });\r\n    };\r\n    // Handle submit function when the user submits an input\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const searchInput = this.state.userInput.toUpperCase();\r\n        if (searchInput !== '') {\r\n            this.props.searchStockEquity(event, searchInput);\r\n            this.setState({\r\n                userInput: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    // Event fired when the user clicks on a suggestion\r\n    onClick = (event) => {\r\n      // Update the user input and reset the rest of the state\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: event.currentTarget.id\r\n      });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            userInput,\r\n            showSuggestions,\r\n            filteredSuggestions,\r\n            activeSuggestion\r\n        } = this.state;\r\n\r\n        // sugegstion results obtained from https://alligator.io/react/react-autocomplete/\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestionActive\";\r\n                            }\r\n                            return (\r\n                                <li \r\n                                    className={className}\r\n                                    key={index}\r\n                                    id={suggestion.symbol}\r\n                                    onClick={this.onClick}\r\n                                ><span>\r\n                                    {suggestion.symbol}\r\n                                </span>\r\n                                <span>\r\n                                    {suggestion.name}\r\n                                </span>  \r\n                                </li>    \r\n                            );   \r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div className=\"noSuggestions\">\r\n                        <p>No suggested results are available.</p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h1><span>h-l</span> index</h1>\r\n                <form className=\"searchForm\" onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"userInput\" className=\"visuallyHidden\">Enter a stock name</label>\r\n                    <input type=\"text\" id=\"userInput\" className=\"searchInput\" placeholder=\"Search for a stock\" autoComplete=\"off\" value={userInput}  \r\n                    onChange={this.handleChange}/>\r\n                    <input className=\"submitButton\" type=\"submit\" value=\"Submit\"/>\r\n                    {suggestionsListComponent}\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Global extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            globalDate: '',\r\n            globalHigh: '',\r\n            globalLow: '',\r\n            globalVolume: '',\r\n            globalChange: '',\r\n            globalChangePercent: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to gather the global/overview data and store it into state\r\n    getGlobalEquityData() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.props.stockEquitySymbol}?timeseries=5`)\r\n        .then((result) => {\r\n            const globalData = result.data.historical[0];\r\n            const dateValue = globalData.date;\r\n            const highValue = globalData.high;\r\n            const lowValue = globalData.low;\r\n            const volumeValue = globalData.volume;\r\n            const changeValue = globalData.change;\r\n            const changePercentValue = globalData.changePercent;\r\n            \r\n            this.setState({\r\n                globalDate: dateValue,\r\n                globalHigh: Number(highValue).toFixed(2),\r\n                globalLow: Number(lowValue).toFixed(2),\r\n                globalVolume: volumeValue,\r\n                globalChange: Number(changeValue).toFixed(2),\r\n                globalChangePercent: Number(changePercentValue).toFixed(2),\r\n                isLoading: false\r\n            })\r\n\r\n            if (changeValue !== 0) {\r\n                this.props.handleStockChange(changeValue);\r\n            }\r\n        }).catch(() => {\r\n            this.props.handleErrors();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGlobalEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            setTimeout(() => {\r\n                this.getGlobalEquityData();\r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            globalHigh,\r\n            globalLow,\r\n            globalDate,\r\n            globalVolume,\r\n            globalChange,\r\n            globalChangePercent,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        const {increaseOrDecrease} = this.props;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>global overview</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>last updated</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change (%)</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>global overview</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>last updated</p>\r\n                        <p>{globalDate}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={increaseOrDecrease}>{globalHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={increaseOrDecrease}>{globalLow}</p>\r\n                    </li>    \r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={increaseOrDecrease}>{globalVolume}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChange}\r\n                            {(increaseOrDecrease === 'increase') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (increaseOrDecrease === 'decrease') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span>  : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change (%)</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChangePercent}\r\n                            {(increaseOrDecrease === 'increase') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (increaseOrDecrease === 'decrease') ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span>  : null}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Intraday extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intradayHigh: '',\r\n            intradayLow: '',\r\n            intradayClose: '',\r\n            intradayVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n    \r\n    // Make axios call to time series intraday and store results in state\r\n    getIntradayEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_INTRADAY',\r\n                    interval: '1min',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (1min)']);\r\n            const highValue = values[0]['2. high'];\r\n            const lowValue = values[0]['3. low'];\r\n            const closeValue = values[0]['4. close'];\r\n            const volumeValue = values[0]['5. volume'];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                intradayHigh: Number(highValue).toFixed(2),\r\n                intradayLow: Number(lowValue).toFixed(2),\r\n                intradayClose: Number(closeValue).toFixed(2),\r\n                intradayVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getIntradayEquityData();        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n                this.getIntradayEquityData();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        const {\r\n            intradayHigh,\r\n            intradayLow,\r\n            intradayClose,\r\n            intradayVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>intraday data (1 min)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>intraday data (1 min)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}    \r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayLow}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Daily extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dailyHigh: '',\r\n            dailyLow: '',\r\n            dailyClose: '',\r\n            dailyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to time series daily and store results in state\r\n    getDailyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_DAILY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (Daily)']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                dailyHigh: Number(highValue).toFixed(2),\r\n                dailyLow: Number(lowValue).toFixed(2),\r\n                dailyClose: Number(closeValue).toFixed(2),\r\n                dailyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        })\r\n        this.getDailyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getDailyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            dailyHigh,\r\n            dailyLow,\r\n            dailyClose,\r\n            dailyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>daily data (yesterday)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>daily data (yesterday)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyLow}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Weekly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            weeklyHigh: '',\r\n            weeklyLow: '',\r\n            weeklyClose: '',\r\n            weeklyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to timer series weekly and store results in state\r\n    getWeeklyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_WEEKLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Weekly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                weeklyHigh: Number(highValue).toFixed(2),\r\n                weeklyLow: Number(lowValue).toFixed(2),\r\n                weeklyClose: Number(closeValue).toFixed(2),\r\n                weeklyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getWeeklyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getWeeklyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weeklyHigh,\r\n            weeklyLow,\r\n            weeklyClose,\r\n            weeklyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>weekly data (last week)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>weekly data (last week)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyLow}\r\n                                {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Monthly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monthlyHigh: '',\r\n            monthlyLow: '',\r\n            monthlyClose: '',\r\n            monthlyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios to call to time series monthly and store results in state \r\n    getMonthlyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_MONTHLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Monthly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                monthlyHigh: Number(highValue).toFixed(2),\r\n                monthlyLow: Number(lowValue).toFixed(2),\r\n                monthlyClose: Number(closeValue).toFixed(2),\r\n                monthlyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getMonthlyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getMonthlyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            monthlyHigh,\r\n            monthlyLow,\r\n            monthlyClose,\r\n            monthlyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>monthly data (last month)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>monthly data (last month)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyHigh}\r\n                            {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyLow}\r\n                                {(changeIncrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /></span> : (changeDecrease) ? <span aria-hidden=\"true\"><FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /></span> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyClose}\r\n                            </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>                  {monthlyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// flickity library obtained from https://www.npmjs.com/package/react-flickity-component\r\nimport Flickity from 'react-flickity-component';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class Ticker extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tickerList: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\r\n        .then((result) => {\r\n            const symbolsList = result.data.symbolsList;\r\n            const newSymbolsList = [];\r\n            for (let i = 0; i < 20; i++) {\r\n                newSymbolsList.push(symbolsList[i]);\r\n            };\r\n            this.setState({\r\n                tickerList: newSymbolsList,\r\n                isLoading: false\r\n            })\r\n        }).catch ((error) => {\r\n            Swal.fire(\r\n                'Error', \r\n                `An error has occurred, ${error.message}`, \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tickerList,\r\n            isLoading\r\n        } = this.state\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"preloader3\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const flickityOptions = {\r\n            wrapAround: true,\r\n            autoPlay: 1800\r\n        }\r\n\r\n        return (\r\n            <Flickity \r\n                className={'tickerCarousel'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static\r\n            >\r\n            {tickerList.map((ticker, index) => {\r\n                return (\r\n                    <div className={'tickerCell'} key={index}>\r\n                        <p>{ticker.symbol}</p>\r\n                        <p>{ticker.price}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            </Flickity>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\nimport './App.scss';\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\nimport Swal from 'sweetalert2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\nimport Header from './components/Header';\nimport Global from './components/Global';\nimport Intraday from './components/Intraday';\nimport Daily from './components/Daily';\nimport Weekly from './components/Weekly';\nimport Monthly from './components/Monthly';\nimport Ticker from './components/Ticker';\nimport axios from 'axios';\n\nexport default class App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        stockName: '',\n        stockSymbol: 'MSFT',\n        stockLetters: '',\n        stockPrice: '',\n        stockList: [],\n        reactApiKey: process.env.REACT_APP_ALPHAVANTAGE_API_KEY,\n        changeIncrease: false,\n        changeDecrease: false,\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false,\n        isLoading: true\n      }\n    }\n    \n    // Make axios call when the app component mounts and store the default stock data into state\n    getStockInfo() {\n      axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\n      .then((result) => {\n        const symbolsList = result.data.symbolsList;\n        const originalSymbolsList = [...symbolsList];\n        const stock = originalSymbolsList.filter((item) => {\n          return item.symbol === this.state.stockSymbol;\n        });\n        const symbol = stock[0].symbol; \n        const name = stock[0].name;\n        const price = stock[0].price;\n        this.setState({\n          stockName: name,\n          stockSymbol: symbol,\n          stockLetters: symbol,\n          stockPrice: price,\n          stockList: originalSymbolsList,\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.handleErrors();\n      }); \n    }\n\n    componentDidMount() {\n      Swal.fire(\n          'Welcome to H-L Index', \n          'Want to know what the latest value on a particular stock? This application will display realtime data as well as historical data from last month, week, day and even last minute. Search for any stock in the search bar by entering a stock name. (Ex. MSFT, SPY)', \n          'info'\n      );\n      this.getStockInfo();\n    }\n\n    handleErrors = () => {\n      Swal.fire(\n          'Error', \n          'Your have entered an incorrect stock name! Please enter a valid stock name. (Ex. MSFT, SPY)', \n          'error'\n      );\n    }\n\n    // When user clicks on the global time series button, display the global data\n    handleSwitchGlobal = () => {\n      this.setState({\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the intraday time series button, display the intraday data\n    handleSwitchIntraday = () => {\n      this.setState({\n        timeSeriesIntraday: true,\n        timeSeriesGlobal: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the daily time series button, display the daily data\n    handleSwitchDaily = () => {\n      this.setState({\n        timeSeriesDaily: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the weekly time series button, display the weekly data\n    handleSwitchWeekly = () => {\n      this.setState({\n        timeSeriesWeekly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the monthly time series button, display the monthly data\n    handleSwitchMonthly = () => {\n      this.setState({\n        timeSeriesMonthly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false\n      });\n    };\n\n    // Search for the stock equity based on user input and call the axios function\n    searchStockEquity = (event, userInput) => {\n      event.preventDefault();\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: 'Loading data',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      this.setState({\n        stockSymbol: userInput,\n        changeDecrease: false,\n        changeIncrease: false\n      });\n      this.getStockInfo();\n    }\n\n    // Determine if the stock increased or decreased based on the change value\n    handleStockChange = (upOrDown) => {\n      if (upOrDown > 0) {\n        this.setState({\n          changeIncrease: true\n        })\n      }\n      else {\n        this.setState({\n          changeDecrease: true\n        })\n      }\n    }\n\n    render() {\n      \n      const {\n        stockName, \n        stockSymbol,\n        stockLetters,\n        stockList,\n        reactApiKey,\n        changeIncrease,\n        changeDecrease,\n        isLoading,\n        timeSeriesGlobal,\n        timeSeriesIntraday,\n        timeSeriesDaily,\n        timeSeriesWeekly,\n        timeSeriesMonthly,\n      } = this.state;\n\n      if (isLoading) {\n        return(\n          <div className=\"ldsHourglass\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n          </div>\n        )\n      } \n\n        return (\n            <div className=\"App\">\n              <header>\n                <Header stockList={stockList} searchStockEquity={this.searchStockEquity}/>\n              </header>\n              <main>\n                <div className=\"wrapper\">\n                  <h2>{stockName} ({stockLetters})</h2>\n\n                  {timeSeriesGlobal && <Global handleErrors={this.handleErrors} apiKey={reactApiKey} stockEquitySymbol={stockSymbol} handleStockChange={this.handleStockChange} increaseOrDecrease={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}  />}\n                  {timeSeriesIntraday && (!timeSeriesDaily) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Intraday apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                  {timeSeriesDaily && (!timeSeriesIntraday) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Daily apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                  {timeSeriesWeekly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesMonthly) && <Weekly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n                  {timeSeriesMonthly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesWeekly) && <Monthly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n\n                  <div className=\"timeSeriesButtons\">\n                    {(!timeSeriesGlobal) ? <button onClick={this.handleSwitchGlobal}>global</button> : null}  \n                    {(!timeSeriesIntraday) ? <button onClick={this.handleSwitchIntraday}>intraday</button> : null}\n                    {(!timeSeriesDaily) ? <button onClick={this.handleSwitchDaily}>daily</button> : null}\n                    {(!timeSeriesWeekly) ? <button onClick={this.handleSwitchWeekly}>weekly</button> : null}\n                    {(!timeSeriesMonthly) ? <button onClick={this.handleSwitchMonthly}>monthly</button> : null}\n                  </div>\n                </div> \n              </main>\n              <footer>\n                <Ticker />\n                <div className=\"wrapper\">\n                <p>copyright <span aria-hidden=\"true\"><FontAwesomeIcon icon={faCopyright} /></span> vincent <span id=\"year\">{new Date().getFullYear()}</span></p>\n                </div>\n              </footer>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}