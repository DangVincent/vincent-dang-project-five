{"version":3,"sources":["components/Header.js","components/Global.js","components/Intraday.js","components/Daily.js","components/Weekly.js","components/Monthly.js","components/Ticker.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleChange","event","setState","userInput","target","value","handleSubmit","preventDefault","searchInput","state","toUpperCase","props","searchStockEquity","className","onSubmit","this","htmlFor","type","id","placeholder","onChange","Component","Global","globalDate","globalHigh","globalLow","globalVolume","globalChange","globalChangePercent","isLoading","axios","get","stockEquitySymbol","then","result","globalData","data","historical","dateValue","date","highValue","high","lowValue","low","volumeValue","volume","changeValue","change","changePercentValue","changePercent","Number","toFixed","handleStockChange","catch","handleErrors","getGlobalEquityData","prevProps","setTimeout","increaseOrDecrease","icon","faCaretUp","faCaretDown","Intraday","intradayHigh","intradayLow","intradayClose","intradayVolume","changeIncrease","changeDecrease","method","url","dataResponse","params","apikey","apiKey","function","interval","symbol","values","Object","closeValue","closeValue2","Swal","fire","getIntradayEquityData","Daily","dailyHigh","dailyLow","dailyClose","dailyVolume","getDailyEquityData","Weekly","weeklyHigh","weeklyLow","weeklyClose","weeklyVolume","getWeeklyEquityData","Monthly","monthlyHigh","monthlyLow","monthlyClose","monthlyVolume","getMonthlyEquityData","Ticker","tickerList","symbolsList","newSymbolsList","i","push","error","message","elementType","options","wrapAround","autoPlay","static","map","ticker","index","key","price","App","handleSwitchGlobal","timeSeriesGlobal","timeSeriesIntraday","timeSeriesDaily","timeSeriesWeekly","timeSeriesMonthly","handleSwitchIntraday","handleSwitchDaily","handleSwitchWeekly","handleSwitchMonthly","position","title","showConfirmButton","timer","stockSymbol","getStockInfo","upOrDown","stockName","stockLetters","stockPrice","reactApiKey","process","stock","filter","item","name","onClick","faCopyright","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8a39407.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInput: ''\r\n        }\r\n    }\r\n\r\n    // Handle any change to the search input and set state\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            userInput: event.target.value\r\n        });\r\n    }\r\n\r\n    // Handle submit function when the user submits an input\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const searchInput = this.state.userInput.toUpperCase();\r\n        if (searchInput !== '') {\r\n            this.props.searchStockEquity(event, searchInput);\r\n            this.setState({\r\n                userInput: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h1><span>h-l</span> index</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"userInput\" className=\"visuallyHidden\">Enter a stock name</label>\r\n                    <input type=\"text\" id=\"userInput\" className=\"searchInput\" placeholder=\"Search for a stock\" value={this.state.userInput} onChange={this.handleChange}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Global extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            globalDate: '',\r\n            globalHigh: '',\r\n            globalLow: '',\r\n            globalVolume: '',\r\n            globalChange: '',\r\n            globalChangePercent: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to gather the global/overview data and store it into state\r\n    getGlobalEquityData() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.props.stockEquitySymbol}?timeseries=5`)\r\n        .then((result) => {\r\n            const globalData = result.data.historical[0];\r\n            const dateValue = globalData.date;\r\n            const highValue = globalData.high;\r\n            const lowValue = globalData.low;\r\n            const volumeValue = globalData.volume;\r\n            const changeValue = globalData.change;\r\n            const changePercentValue = globalData.changePercent;\r\n            \r\n            this.setState({\r\n                globalDate: dateValue,\r\n                globalHigh: Number(highValue).toFixed(2),\r\n                globalLow: Number(lowValue).toFixed(2),\r\n                globalVolume: volumeValue,\r\n                globalChange: Number(changeValue).toFixed(2),\r\n                globalChangePercent: Number(changePercentValue).toFixed(2),\r\n                isLoading: false\r\n            })\r\n\r\n            if (changeValue !== 0) {\r\n                this.props.handleStockChange(changeValue);\r\n            }\r\n        }).catch(() => {\r\n            this.props.handleErrors();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGlobalEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            setTimeout(() => {\r\n                this.getGlobalEquityData();\r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            globalHigh,\r\n            globalLow,\r\n            globalDate,\r\n            globalVolume,\r\n            globalChange,\r\n            globalChangePercent,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        const {increaseOrDecrease} = this.props;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>global overview</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>last updated</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change (%)</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>global overview</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>last updated</p>\r\n                        <p>{globalDate}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={increaseOrDecrease}>{globalHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={increaseOrDecrease}>{globalLow}</p>\r\n                    </li>    \r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={increaseOrDecrease}>{globalVolume}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChange}\r\n                            {(increaseOrDecrease === 'increase') ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (increaseOrDecrease === 'decrease') ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change (%)</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChangePercent}\r\n                            {(increaseOrDecrease === 'increase') ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (increaseOrDecrease === 'decrease') ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Intraday extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intradayHigh: '',\r\n            intradayLow: '',\r\n            intradayClose: '',\r\n            intradayVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n    \r\n    // Make axios call to time series intraday and store results in state\r\n    getIntradayEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_INTRADAY',\r\n                    interval: '1min',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (1min)']);\r\n            const highValue = values[0]['2. high'];\r\n            const lowValue = values[0]['3. low'];\r\n            const closeValue = values[0]['4. close'];\r\n            const volumeValue = values[0]['5. volume'];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                intradayHigh: Number(highValue).toFixed(2),\r\n                intradayLow: Number(lowValue).toFixed(2),\r\n                intradayClose: Number(closeValue).toFixed(2),\r\n                intradayVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getIntradayEquityData();        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n                this.getIntradayEquityData();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        const {\r\n            intradayHigh,\r\n            intradayLow,\r\n            intradayClose,\r\n            intradayVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>intraday data (1 min)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>intraday data (1 min)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}    \r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Daily extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dailyHigh: '',\r\n            dailyLow: '',\r\n            dailyClose: '',\r\n            dailyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to time series daily and store results in state\r\n    getDailyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_DAILY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (Daily)']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                dailyHigh: Number(highValue).toFixed(2),\r\n                dailyLow: Number(lowValue).toFixed(2),\r\n                dailyClose: Number(closeValue).toFixed(2),\r\n                dailyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        })\r\n        this.getDailyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getDailyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            dailyHigh,\r\n            dailyLow,\r\n            dailyClose,\r\n            dailyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>daily data (yesterday)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>daily data (yesterday)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Weekly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            weeklyHigh: '',\r\n            weeklyLow: '',\r\n            weeklyClose: '',\r\n            weeklyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to timer series weekly and store results in state\r\n    getWeeklyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_WEEKLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Weekly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                weeklyHigh: Number(highValue).toFixed(2),\r\n                weeklyLow: Number(lowValue).toFixed(2),\r\n                weeklyClose: Number(closeValue).toFixed(2),\r\n                weeklyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getWeeklyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getWeeklyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weeklyHigh,\r\n            weeklyLow,\r\n            weeklyClose,\r\n            weeklyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>weekly data (last week)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>weekly data (last week)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Monthly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monthlyHigh: '',\r\n            monthlyLow: '',\r\n            monthlyClose: '',\r\n            monthlyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios to call to time series monthly and store results in state \r\n    getMonthlyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_MONTHLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Monthly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                monthlyHigh: Number(highValue).toFixed(2),\r\n                monthlyLow: Number(lowValue).toFixed(2),\r\n                monthlyClose: Number(closeValue).toFixed(2),\r\n                monthlyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getMonthlyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getMonthlyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            monthlyHigh,\r\n            monthlyLow,\r\n            monthlyClose,\r\n            monthlyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>monthly data (last month)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>monthly data (last month)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyClose}\r\n                            </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>                  {monthlyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// flickity library obtained from https://www.npmjs.com/package/react-flickity-component\r\nimport Flickity from 'react-flickity-component';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class Ticker extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tickerList: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\r\n        .then((result) => {\r\n            const symbolsList = result.data.symbolsList;\r\n            const newSymbolsList = [];\r\n            for (let i = 0; i < 20; i++) {\r\n                newSymbolsList.push(symbolsList[i]);\r\n            };\r\n            this.setState({\r\n                tickerList: newSymbolsList,\r\n                isLoading: false\r\n            })\r\n        }).catch ((error) => {\r\n            Swal.fire(\r\n                'Error', \r\n                `An error has occurred, ${error.message}`, \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tickerList,\r\n            isLoading\r\n        } = this.state\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"preloader3\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const flickityOptions = {\r\n            wrapAround: true,\r\n            autoPlay: 1800\r\n        }\r\n\r\n        return (\r\n            <Flickity \r\n                className={'tickerCarousel'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static\r\n            >\r\n            {tickerList.map((ticker, index) => {\r\n                return (\r\n                    <div className={'tickerCell'} key={index}>\r\n                        <p>{ticker.symbol}</p>\r\n                        <p>{ticker.price}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            </Flickity>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\nimport './App.scss';\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\nimport Swal from 'sweetalert2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\nimport Header from './components/Header';\nimport Global from './components/Global';\nimport Intraday from './components/Intraday';\nimport Daily from './components/Daily';\nimport Weekly from './components/Weekly';\nimport Monthly from './components/Monthly';\nimport Ticker from './components/Ticker';\nimport axios from 'axios';\n\nexport default class App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        stockName: '',\n        stockSymbol: 'MSFT',\n        stockLetters: '',\n        stockPrice: '',\n        reactApiKey: process.env.REACT_APP_ALPHAVANTAGE_API_KEY,\n        changeIncrease: false,\n        changeDecrease: false,\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false,\n        isLoading: true\n      }\n    }\n    \n    // Make axios call when the app component mounts and store the default stock data into state\n    getStockInfo() {\n      axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\n      .then((result) => {\n        const symbolsList = result.data.symbolsList;\n        const originalSymbolsList = [...symbolsList];\n        const stock = originalSymbolsList.filter((item) => {\n          return item.symbol === this.state.stockSymbol;\n        });\n        const symbol = stock[0].symbol; \n        const name = stock[0].name;\n        const price = stock[0].price;\n        this.setState({\n          stockName: name,\n          stockSymbol: symbol,\n          stockLetters: symbol,\n          stockPrice: price,\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.handleErrors();\n      }); \n    }\n\n    componentDidMount() {\n        this.getStockInfo();\n    }\n\n    handleErrors = () => {\n      Swal.fire(\n          'Error', \n          'Your have entered an incorrect stock name! Please enter a valid stock name. (Ex. MSFT, SPY)', \n          'error'\n      );\n    }\n\n    // When user clicks on the global time series button, display the global data\n    handleSwitchGlobal = () => {\n      this.setState({\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the intraday time series button, display the intraday data\n    handleSwitchIntraday = () => {\n      this.setState({\n        timeSeriesIntraday: true,\n        timeSeriesGlobal: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the daily time series button, display the daily data\n    handleSwitchDaily = () => {\n      this.setState({\n        timeSeriesDaily: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the weekly time series button, display the weekly data\n    handleSwitchWeekly = () => {\n      this.setState({\n        timeSeriesWeekly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the monthly time series button, display the monthly data\n    handleSwitchMonthly = () => {\n      this.setState({\n        timeSeriesMonthly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false\n      });\n    };\n\n    // Search for the stock equity based on user input and call the axios function\n    searchStockEquity = (event, userInput) => {\n      event.preventDefault();\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: 'Loading data',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      this.setState({\n        stockSymbol: userInput,\n        changeDecrease: false,\n        changeIncrease: false\n      });\n      this.getStockInfo();\n    }\n\n    // Determine if the stock increased or decreased based on the change value\n    handleStockChange = (upOrDown) => {\n      if (upOrDown > 0) {\n        this.setState({\n          changeIncrease: true\n        })\n      }\n      else {\n        this.setState({\n          changeDecrease: true\n        })\n      }\n    }\n\n    render() {\n      \n      const {\n        stockName, \n        stockSymbol,\n        stockLetters,\n        reactApiKey,\n        changeIncrease,\n        changeDecrease,\n        isLoading,\n        timeSeriesGlobal,\n        timeSeriesIntraday,\n        timeSeriesDaily,\n        timeSeriesWeekly,\n        timeSeriesMonthly,\n      } = this.state;\n\n      if (isLoading) {\n        return(\n          <div className=\"ldsHourglass\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n          </div>\n        )\n      } \n\n        return (\n            <div className=\"App\">\n              <header>\n                <Header searchStockEquity={this.searchStockEquity}/>\n              </header>\n              <main>\n                <div className=\"wrapper\">\n                  <h2>{stockName} ({stockLetters})</h2>\n\n                  {timeSeriesGlobal && <Global handleErrors={this.handleErrors} apiKey={reactApiKey} stockEquitySymbol={stockSymbol} handleStockChange={this.handleStockChange} increaseOrDecrease={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}  />}\n                  {timeSeriesIntraday && (!timeSeriesDaily) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Intraday apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                  {timeSeriesDaily && (!timeSeriesIntraday) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Daily apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                  {timeSeriesWeekly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesMonthly) && <Weekly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n                  {timeSeriesMonthly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesWeekly) && <Monthly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n\n                  <div className=\"timeSeriesButtons\">\n                    {(!timeSeriesGlobal) ? <button onClick={this.handleSwitchGlobal}>global</button> : null}  \n                    {(!timeSeriesIntraday) ? <button onClick={this.handleSwitchIntraday}>intraday</button> : null}\n                    {(!timeSeriesDaily) ? <button onClick={this.handleSwitchDaily}>daily</button> : null}\n                    {(!timeSeriesWeekly) ? <button onClick={this.handleSwitchWeekly}>weekly</button> : null}\n                    {(!timeSeriesMonthly) ? <button onClick={this.handleSwitchMonthly}>monthly</button> : null}\n                  </div>\n                </div> \n              </main>\n              <footer>\n                <Ticker />\n                <div className=\"wrapper\">\n                <p>copyright <FontAwesomeIcon icon={faCopyright} /> vincent 2019</p>\n                </div>\n              </footer>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}