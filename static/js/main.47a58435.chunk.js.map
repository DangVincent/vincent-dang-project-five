{"version":3,"sources":["components/Header.js","components/Global.js","components/Intraday.js","components/Daily.js","components/Weekly.js","components/Monthly.js","components/Ticker.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleChange","event","stockList","props","userInput","target","value","filterSuggestions","filter","stocks","symbol","toUpperCase","indexOf","setState","activeSuggestion","filteredSuggestions","showSuggestions","handleSubmit","preventDefault","searchInput","state","searchStockEquity","suggestionsListComponent","this","length","className","map","suggestion","index","key","name","onSubmit","htmlFor","type","id","placeholder","onKeyDown","onChange","Component","Global","globalDate","globalHigh","globalLow","globalVolume","globalChange","globalChangePercent","isLoading","axios","get","stockEquitySymbol","then","result","globalData","data","historical","dateValue","date","highValue","high","lowValue","low","volumeValue","volume","changeValue","change","changePercentValue","changePercent","Number","toFixed","handleStockChange","catch","handleErrors","getGlobalEquityData","prevProps","setTimeout","increaseOrDecrease","icon","faCaretUp","faCaretDown","Intraday","intradayHigh","intradayLow","intradayClose","intradayVolume","changeIncrease","changeDecrease","method","url","dataResponse","params","apikey","apiKey","function","interval","values","Object","closeValue","closeValue2","Swal","fire","getIntradayEquityData","Daily","dailyHigh","dailyLow","dailyClose","dailyVolume","getDailyEquityData","Weekly","weeklyHigh","weeklyLow","weeklyClose","weeklyVolume","getWeeklyEquityData","Monthly","monthlyHigh","monthlyLow","monthlyClose","monthlyVolume","getMonthlyEquityData","Ticker","tickerList","symbolsList","newSymbolsList","i","push","error","message","elementType","options","wrapAround","autoPlay","static","ticker","price","App","handleSwitchGlobal","timeSeriesGlobal","timeSeriesIntraday","timeSeriesDaily","timeSeriesWeekly","timeSeriesMonthly","handleSwitchIntraday","handleSwitchDaily","handleSwitchWeekly","handleSwitchMonthly","position","title","showConfirmButton","timer","stockSymbol","getStockInfo","upOrDown","stockName","stockLetters","stockPrice","reactApiKey","process","originalSymbolsList","stock","item","onClick","faCopyright","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47a58435.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInput: '',\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n        };\r\n    };\r\n\r\n    // Handle any change to the search input and set state\r\n    handleChange = (event) => {\r\n        const {stockList} = this.props;\r\n        const userInput = event.target.value;\r\n        const filterSuggestions = stockList.filter(\r\n            (stocks) => {\r\n                return !stocks.symbol.toUpperCase().indexOf(userInput.toUpperCase())\r\n            });\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: filterSuggestions,\r\n            showSuggestions: true,\r\n            userInput: event.target.value\r\n        });\r\n    };\r\n    // Handle submit function when the user submits an input\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const searchInput = this.state.userInput.toUpperCase();\r\n        if (searchInput !== '') {\r\n            this.props.searchStockEquity(event, searchInput);\r\n            this.setState({\r\n                userInput: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            userInput,\r\n            showSuggestions,\r\n            filteredSuggestions,\r\n            activeSuggestion\r\n        } = this.state;\r\n\r\n        // sugegstion results obtained from https://alligator.io/react/react-autocomplete/\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestionActive\";\r\n                            }\r\n                            return (\r\n                                <li \r\n                                    className={className}\r\n                                    key={index}\r\n                                    // onClick={this.onClick}\r\n                                    value={suggestion.symbol}\r\n                                ><span>\r\n                                    {suggestion.symbol}\r\n                                </span>\r\n                                <span>\r\n                                    {suggestion.name}\r\n                                </span>  \r\n                                </li>    \r\n                            );   \r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div className=\"noSuggestions\">\r\n                        <p>No suggested results are available.</p>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h1><span>h-l</span> index</h1>\r\n                <form className=\"searchForm\" onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"userInput\" className=\"visuallyHidden\">Enter a stock name</label>\r\n                    <input type=\"text\" id=\"userInput\" className=\"searchInput\" placeholder=\"Search for a stock\" value={userInput} \r\n                    onKeyDown={this.onKeyDown} \r\n                    onChange={this.handleChange}/>\r\n                    {suggestionsListComponent}\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Global extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            globalDate: '',\r\n            globalHigh: '',\r\n            globalLow: '',\r\n            globalVolume: '',\r\n            globalChange: '',\r\n            globalChangePercent: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to gather the global/overview data and store it into state\r\n    getGlobalEquityData() {\r\n        axios.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.props.stockEquitySymbol}?timeseries=5`)\r\n        .then((result) => {\r\n            const globalData = result.data.historical[0];\r\n            const dateValue = globalData.date;\r\n            const highValue = globalData.high;\r\n            const lowValue = globalData.low;\r\n            const volumeValue = globalData.volume;\r\n            const changeValue = globalData.change;\r\n            const changePercentValue = globalData.changePercent;\r\n            \r\n            this.setState({\r\n                globalDate: dateValue,\r\n                globalHigh: Number(highValue).toFixed(2),\r\n                globalLow: Number(lowValue).toFixed(2),\r\n                globalVolume: volumeValue,\r\n                globalChange: Number(changeValue).toFixed(2),\r\n                globalChangePercent: Number(changePercentValue).toFixed(2),\r\n                isLoading: false\r\n            })\r\n\r\n            if (changeValue !== 0) {\r\n                this.props.handleStockChange(changeValue);\r\n            }\r\n        }).catch(() => {\r\n            this.props.handleErrors();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGlobalEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            setTimeout(() => {\r\n                this.getGlobalEquityData();\r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            globalHigh,\r\n            globalLow,\r\n            globalDate,\r\n            globalVolume,\r\n            globalChange,\r\n            globalChangePercent,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        const {increaseOrDecrease} = this.props;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>global overview</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>last updated</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>change (%)</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>global overview</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>last updated</p>\r\n                        <p>{globalDate}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={increaseOrDecrease}>{globalHigh}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={increaseOrDecrease}>{globalLow}</p>\r\n                    </li>    \r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={increaseOrDecrease}>{globalVolume}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChange}\r\n                            {(increaseOrDecrease === 'increase') ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (increaseOrDecrease === 'decrease') ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>change (%)</p>\r\n                        <p \r\n                            className={increaseOrDecrease}\r\n                        >\r\n                            {globalChangePercent}\r\n                            {(increaseOrDecrease === 'increase') ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (increaseOrDecrease === 'decrease') ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Intraday extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            intradayHigh: '',\r\n            intradayLow: '',\r\n            intradayClose: '',\r\n            intradayVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n    \r\n    // Make axios call to time series intraday and store results in state\r\n    getIntradayEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_INTRADAY',\r\n                    interval: '1min',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (1min)']);\r\n            const highValue = values[0]['2. high'];\r\n            const lowValue = values[0]['3. low'];\r\n            const closeValue = values[0]['4. close'];\r\n            const volumeValue = values[0]['5. volume'];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                intradayHigh: Number(highValue).toFixed(2),\r\n                intradayLow: Number(lowValue).toFixed(2),\r\n                intradayClose: Number(closeValue).toFixed(2),\r\n                intradayVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getIntradayEquityData();        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n                this.getIntradayEquityData();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        const {\r\n            intradayHigh,\r\n            intradayLow,\r\n            intradayClose,\r\n            intradayVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>intraday data (1 min)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>intraday data (1 min)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}    \r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {intradayLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayClose}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>{intradayVolume}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Daily extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dailyHigh: '',\r\n            dailyLow: '',\r\n            dailyClose: '',\r\n            dailyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to time series daily and store results in state\r\n    getDailyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_DAILY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Time Series (Daily)']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                dailyHigh: Number(highValue).toFixed(2),\r\n                dailyLow: Number(lowValue).toFixed(2),\r\n                dailyClose: Number(closeValue).toFixed(2),\r\n                dailyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        })\r\n        this.getDailyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getDailyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            dailyHigh,\r\n            dailyLow,\r\n            dailyClose,\r\n            dailyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>daily data (yesterday)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>daily data (yesterday)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {dailyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Weekly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            weeklyHigh: '',\r\n            weeklyLow: '',\r\n            weeklyClose: '',\r\n            weeklyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios call to timer series weekly and store results in state\r\n    getWeeklyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_WEEKLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Weekly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                weeklyHigh: Number(highValue).toFixed(2),\r\n                weeklyLow: Number(lowValue).toFixed(2),\r\n                weeklyClose: Number(closeValue).toFixed(2),\r\n                weeklyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getWeeklyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getWeeklyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            weeklyHigh,\r\n            weeklyLow,\r\n            weeklyClose,\r\n            weeklyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>weekly data (last week)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        } \r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>weekly data (last week)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyClose}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {weeklyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class Monthly extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monthlyHigh: '',\r\n            monthlyLow: '',\r\n            monthlyClose: '',\r\n            monthlyVolume: '',\r\n            changeIncrease: false,\r\n            changeDecrease: false,\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    // Make axios to call to time series monthly and store results in state \r\n    getMonthlyEquityData() {\r\n        axios({\r\n            method:'GET',\r\n            url: `https://www.alphavantage.co/query`,\r\n            dataResponse: 'json',\r\n                params: {\r\n                    apikey: this.props.apiKey,\r\n                    function: 'TIME_SERIES_MONTHLY',\r\n                    symbol: this.props.stockEquitySymbol\r\n                }\r\n        })\r\n        .then((result) => {\r\n            const values = Object.values(result.data['Monthly Time Series']);\r\n            const highValue = values[0][\"2. high\"];\r\n            const lowValue = values[0][\"3. low\"];\r\n            const closeValue = values[0][\"4. close\"];\r\n            const volumeValue = values[0][\"5. volume\"];\r\n            const closeValue2 = values[1]['4. close'];\r\n\r\n            if (closeValue > closeValue2) {\r\n                this.setState({\r\n                    changeIncrease: true\r\n                })\r\n            }\r\n            else if (closeValue < closeValue2) {\r\n                this.setState({\r\n                    changeDecrease: true\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                monthlyHigh: Number(highValue).toFixed(2),\r\n                monthlyLow: Number(lowValue).toFixed(2),\r\n                monthlyClose: Number(closeValue).toFixed(2),\r\n                monthlyVolume: volumeValue,\r\n                isLoading: false\r\n            });\r\n        })\r\n        .catch(() => {\r\n            Swal.fire(\r\n                'Error', \r\n                'You have made too many requests, please wait a minute!', \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            changeDecrease: false,\r\n            changeIncrease: false\r\n        });\r\n        this.getMonthlyEquityData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.stockEquitySymbol !== prevProps.stockEquitySymbol) { \r\n            this.getMonthlyEquityData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            monthlyHigh,\r\n            monthlyLow,\r\n            monthlyClose,\r\n            monthlyVolume,\r\n            changeIncrease,\r\n            changeDecrease,\r\n            isLoading\r\n        } = this.state;\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"timeSeriesContainer\">\r\n                    <h3>monthly data (last month)</h3>\r\n                    <ul>\r\n                        <li>\r\n                            <p>high</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>low</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>close</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <p>volume</p>\r\n                            <div className=\"preloader\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"timeSeriesContainer\">\r\n                <h3>monthly data (last month)</h3>\r\n                <ul>\r\n                    <li>\r\n                        <p>high</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyHigh}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>low</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyLow}\r\n                            {(changeIncrease) ? <FontAwesomeIcon className=\"shakeVertical\" icon={faCaretUp} /> : (changeDecrease) ? <FontAwesomeIcon className=\"shakeVerticalReverse\" icon={faCaretDown} /> : null}\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>close</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>\r\n                            {monthlyClose}\r\n                            </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>volume</p>\r\n                        <p className={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}>                  {monthlyVolume}\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// flickity library obtained from https://www.npmjs.com/package/react-flickity-component\r\nimport Flickity from 'react-flickity-component';\r\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class Ticker extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            tickerList: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\r\n        .then((result) => {\r\n            const symbolsList = result.data.symbolsList;\r\n            const newSymbolsList = [];\r\n            for (let i = 0; i < 20; i++) {\r\n                newSymbolsList.push(symbolsList[i]);\r\n            };\r\n            this.setState({\r\n                tickerList: newSymbolsList,\r\n                isLoading: false\r\n            })\r\n        }).catch ((error) => {\r\n            Swal.fire(\r\n                'Error', \r\n                `An error has occurred, ${error.message}`, \r\n                'error'\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            tickerList,\r\n            isLoading\r\n        } = this.state\r\n\r\n        // When the data is loading show preloader\r\n        if (isLoading) {\r\n            return(\r\n                <div className=\"preloader3\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const flickityOptions = {\r\n            wrapAround: true,\r\n            autoPlay: 1800\r\n        }\r\n\r\n        return (\r\n            <Flickity \r\n                className={'tickerCarousel'}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                static\r\n            >\r\n            {tickerList.map((ticker, index) => {\r\n                return (\r\n                    <div className={'tickerCell'} key={index}>\r\n                        <p>{ticker.symbol}</p>\r\n                        <p>{ticker.price}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            </Flickity>\r\n        );\r\n    };\r\n};\r\n","import React, { Component } from 'react';\nimport './App.scss';\n// Sweet Alert library obtained from https://github.com/sweetalert2/sweetalert2\nimport Swal from 'sweetalert2'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\nimport Header from './components/Header';\nimport Global from './components/Global';\nimport Intraday from './components/Intraday';\nimport Daily from './components/Daily';\nimport Weekly from './components/Weekly';\nimport Monthly from './components/Monthly';\nimport Ticker from './components/Ticker';\nimport axios from 'axios';\n\nexport default class App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        stockName: '',\n        stockSymbol: 'MSFT',\n        stockLetters: '',\n        stockPrice: '',\n        stockList: [],\n        reactApiKey: process.env.REACT_APP_ALPHAVANTAGE_API_KEY,\n        changeIncrease: false,\n        changeDecrease: false,\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false,\n        isLoading: true\n      }\n    }\n    \n    // Make axios call when the app component mounts and store the default stock data into state\n    getStockInfo() {\n      axios.get('https://financialmodelingprep.com/api/v3/company/stock/list')\n      .then((result) => {\n        const symbolsList = result.data.symbolsList;\n        const originalSymbolsList = [...symbolsList];\n        const stock = originalSymbolsList.filter((item) => {\n          return item.symbol === this.state.stockSymbol;\n        });\n        const symbol = stock[0].symbol; \n        const name = stock[0].name;\n        const price = stock[0].price;\n        this.setState({\n          stockName: name,\n          stockSymbol: symbol,\n          stockLetters: symbol,\n          stockPrice: price,\n          stockList: originalSymbolsList,\n          isLoading: false\n        });\n      })\n      .catch(() => {\n        this.handleErrors();\n      }); \n    }\n\n    componentDidMount() {\n        this.getStockInfo();\n    }\n\n    handleErrors = () => {\n      Swal.fire(\n          'Error', \n          'Your have entered an incorrect stock name! Please enter a valid stock name. (Ex. MSFT, SPY)', \n          'error'\n      );\n    }\n\n    // When user clicks on the global time series button, display the global data\n    handleSwitchGlobal = () => {\n      this.setState({\n        timeSeriesGlobal: true,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the intraday time series button, display the intraday data\n    handleSwitchIntraday = () => {\n      this.setState({\n        timeSeriesIntraday: true,\n        timeSeriesGlobal: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the daily time series button, display the daily data\n    handleSwitchDaily = () => {\n      this.setState({\n        timeSeriesDaily: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesWeekly: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the weekly time series button, display the weekly data\n    handleSwitchWeekly = () => {\n      this.setState({\n        timeSeriesWeekly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesMonthly: false\n      });\n    };\n\n    // When user clicks on the monthly time series button, display the monthly data\n    handleSwitchMonthly = () => {\n      this.setState({\n        timeSeriesMonthly: true,\n        timeSeriesGlobal: false,\n        timeSeriesIntraday: false,\n        timeSeriesDaily: false,\n        timeSeriesWeekly: false\n      });\n    };\n\n    // Search for the stock equity based on user input and call the axios function\n    searchStockEquity = (event, userInput) => {\n      event.preventDefault();\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        title: 'Loading data',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      this.setState({\n        stockSymbol: userInput,\n        changeDecrease: false,\n        changeIncrease: false\n      });\n      this.getStockInfo();\n    }\n\n    // Determine if the stock increased or decreased based on the change value\n    handleStockChange = (upOrDown) => {\n      if (upOrDown > 0) {\n        this.setState({\n          changeIncrease: true\n        })\n      }\n      else {\n        this.setState({\n          changeDecrease: true\n        })\n      }\n    }\n\n    render() {\n      \n      const {\n        stockName, \n        stockSymbol,\n        stockLetters,\n        stockList,\n        reactApiKey,\n        changeIncrease,\n        changeDecrease,\n        isLoading,\n        timeSeriesGlobal,\n        timeSeriesIntraday,\n        timeSeriesDaily,\n        timeSeriesWeekly,\n        timeSeriesMonthly,\n      } = this.state;\n\n      if (isLoading) {\n        return(\n          <div className=\"ldsHourglass\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n          </div>\n        )\n      } \n\n        return (\n            <div className=\"App\">\n              <header>\n                <Header stockList={stockList} searchStockEquity={this.searchStockEquity}/>\n              </header>\n              <main>\n                <div className=\"wrapper\">\n                  <h2>{stockName} ({stockLetters})</h2>\n\n                  {timeSeriesGlobal && <Global handleErrors={this.handleErrors} apiKey={reactApiKey} stockEquitySymbol={stockSymbol} handleStockChange={this.handleStockChange} increaseOrDecrease={(changeIncrease) ? 'increase' : (changeDecrease) ? 'decrease' : null}  />}\n                  {timeSeriesIntraday && (!timeSeriesDaily) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Intraday apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                  {timeSeriesDaily && (!timeSeriesIntraday) && (!timeSeriesWeekly) && (!timeSeriesMonthly) && <Daily apiKey={reactApiKey} stockEquitySymbol={stockSymbol} />}\n                  {timeSeriesWeekly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesMonthly) && <Weekly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n                  {timeSeriesMonthly && (!timeSeriesIntraday) && (!timeSeriesDaily) && (!timeSeriesWeekly) && <Monthly apiKey={reactApiKey} stockEquitySymbol={stockSymbol}/> }\n\n                  <div className=\"timeSeriesButtons\">\n                    {(!timeSeriesGlobal) ? <button onClick={this.handleSwitchGlobal}>global</button> : null}  \n                    {(!timeSeriesIntraday) ? <button onClick={this.handleSwitchIntraday}>intraday</button> : null}\n                    {(!timeSeriesDaily) ? <button onClick={this.handleSwitchDaily}>daily</button> : null}\n                    {(!timeSeriesWeekly) ? <button onClick={this.handleSwitchWeekly}>weekly</button> : null}\n                    {(!timeSeriesMonthly) ? <button onClick={this.handleSwitchMonthly}>monthly</button> : null}\n                  </div>\n                </div> \n              </main>\n              <footer>\n                <Ticker />\n                <div className=\"wrapper\">\n                <p>copyright <FontAwesomeIcon icon={faCopyright} /> vincent 2019</p>\n                </div>\n              </footer>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}